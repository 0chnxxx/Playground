version: '3.8'

services:
  mysql:
    container_name: mysql
    image: mysql:8.0.36
    restart: always
    environment:
      MYSQL_DATABASE: chat_service
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: root
      TZ: 'Asia/Seoul'
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - local

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - local

  zookeeper:
    container_name: zookeeper
    image: arm64v8/zookeeper
    restart: always
    ports:
      - "2181:2181"
    networks:
      - local

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "chat-message:1:1"  #topic이름:partition개수:replica개수
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - local

  application:
    container_name: chat-service
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: jdbc:mysql://host.docker.internal:3306/chat_service
      DATABASE_USERNAME: "root"
      DATABASE_PASSWORD: "root"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - mysql
      - redis
      - kafka
    networks:
      - local

volumes:
  mysql_data:
  redis_data:

networks:
  local:
    driver: bridge
